// FADE ANIMATION
@mixin animateFade($time, $ease, $start: 0, $end: 1, $delay: 0s) {
    @keyframes fade {
        from { opacity: $end; }
        to { opacity: $start; }
    }
    animation: fade #{$time} #{$ease} #{$delay} forwards;
    opacity: $start;
    animation-fill-mode: forwards;
}
  
// FLY ANIMATION
@mixin animateFly($time, $ease, $direction, $start: 0, $end: 1, $mode, $delay: 0s) {
    @if $mode == 'inverted' {
        @if $direction == 'vertical' {
            @keyframes flyVerticalInverted {
                from {
                    opacity: $end;
                    transform: translate(
                        0,
                        if($end == 0, 50px, 0)
                    );
                    }
                    to {
                    opacity: $start;
                    transform: translate(
                        0,
                        if($start == 0, -50px, 0)
                    );
                }
            }
            animation: flyVerticalInverted #{$time} #{$ease} #{$delay} forwards;
        } @else {
            @keyframes flyHorizontalInverted {
                from {
                    opacity: $end;
                    transform: translate(
                        if($end == 0, -50px, 0),
                        0
                    );
                }
                to {
                    opacity: $start;
                    transform: translate(
                        if($start == 0, 50px, 0),
                        0
                    );
                }
            }
            animation: flyHorizontalInverted #{$time} #{$ease} #{$delay} forwards;
        }
    } @else {
        @if $direction == 'vertical' {
            @keyframes flyVerticalNormal {
                from {
                    opacity: $end;
                    transform: translate(
                        0,
                        if($end == 0, -50px, 0)
                    );
                    }
                    to {
                    opacity: $start;
                    transform: translate(
                        0,
                        if($start == 0, 50px, 0)
                    );
                }
            }
            animation: flyVerticalNormal #{$time} #{$ease} #{$delay} forwards;
        } @else {
            @keyframes flyHorizontalNormal {
                from {
                    opacity: $end;
                    transform: translate(
                        if($end == 0, 50px, 0),
                        0
                    );
                }
                to {
                    opacity: $start;
                    transform: translate(
                        if($start == 0, -50px, 0),
                        0
                    );
                }
            }
            animation: flyHorizontalNormal #{$time} #{$ease} #{$delay} forwards;
        }
    }
    transform: translate(
        if($direction == 'horizontal', if($end == 0, if($mode == 'normal', -50px, 50px), 0), 0),
        if($direction == 'vertical', if($end == 0, if($mode == 'normal', -50px, 50px), 0), 0)
    );
    opacity: $start;
    animation-fill-mode: forwards;
}
  
@each $mode in ('in', 'out') {
    @each $time in (250ms, 500ms, 750ms, 1s, 2s, 3s, 4s, 5s) {
        @each $delay in (0s, 0ms, 250ms, 500ms, 750ms, 1s, 2s, 3s, 4s, 5s) {
            .fade-#{$mode}-#{$time}-linear { @include animateFade($time, linear, if($mode == 'out', 1, 0), if($mode == 'out', 0, 0)); }
            .fade-#{$mode}-#{$time}-easeIn { @include animateFade($time, ease-in, if($mode == 'out', 1, 0), if($mode == 'out', 0, 0)); }
            .fade-#{$mode}-#{$time}-easeOut { @include animateFade($time, ease-out, if($mode == 'out', 1, 0), if($mode == 'out', 0, 0)); }
            .fade-#{$mode}-#{$time}-easeInOut { @include animateFade($time, ease-in-out, if($mode == 'out', 1, 0), if($mode == 'out', 0, 0)); }

            .fade-#{$mode}-#{$time}-linear-#{$delay} { @include animateFade($time, linear, if($mode == 'out', 1, 0), if($mode == 'out', 0, 0), $delay); }
            .fade-#{$mode}-#{$time}-easeIn-#{$delay} { @include animateFade($time, ease-in, if($mode == 'out', 1, 0), if($mode == 'out', 0, 0), $delay); }
            .fade-#{$mode}-#{$time}-easeOut-#{$delay} { @include animateFade($time, ease-out, if($mode == 'out', 1, 0), if($mode == 'out', 0, 0), $delay); }
            .fade-#{$mode}-#{$time}-easeInOut-#{$delay} { @include animateFade($time, ease-in-out, if($mode == 'out', 1, 0), if($mode == 'out', 0, 0), $delay); }
    
            @each $direction in ('horizontal', 'vertical') {
                @each $type in ('inverted', 'normal') {
                    .fly-#{$direction}-#{$mode}-#{$time}-linear-#{$type} { @include animateFly($time, linear, $direction, if($mode == 'out', 1, 0), if($mode == 'out', 0, 1), $type); }
                    .fly-#{$direction}-#{$mode}-#{$time}-easeIn-#{$type} { @include animateFly($time, ease-in, $direction, if($mode == 'out', 1, 0), if($mode == 'out', 0, 1), $type); }
                    .fly-#{$direction}-#{$mode}-#{$time}-easeOut-#{$type} { @include animateFly($time, ease-out, $direction, if($mode == 'out', 1, 0), if($mode == 'out', 0, 1), $type); }
                    .fly-#{$direction}-#{$mode}-#{$time}-easeInOut-#{$type} { @include animateFly($time, ease-in-out, $direction, if($mode == 'out', 1, 0), if($mode == 'out', 0, 1), $type); }
                    
                    .fly-#{$direction}-#{$mode}-#{$time}-linear-#{$delay}-#{$type} { @include animateFly($time, linear, $direction, if($mode == 'out', 1, 0), if($mode == 'out', 0, 1), $type, $delay); }
                    .fly-#{$direction}-#{$mode}-#{$time}-easeIn-#{$delay}-#{$type} { @include animateFly($time, ease-in, $direction, if($mode == 'out', 1, 0), if($mode == 'out', 0, 1), $type, $delay); }
                    .fly-#{$direction}-#{$mode}-#{$time}-easeOut-#{$delay}-#{$type} { @include animateFly($time, ease-out, $direction, if($mode == 'out', 1, 0), if($mode == 'out', 0, 1), $type, $delay); }
                    .fly-#{$direction}-#{$mode}-#{$time}-easeInOut-#{$delay}-#{$type} { @include animateFly($time, ease-in-out, $direction, if($mode == 'out', 1, 0), if($mode == 'out', 0, 1), $type, $delay); }
                }
            }
        }
    }
}  